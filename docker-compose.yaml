version: "3.8"

services:
  app-prod-1:
    image: ${APP_IMAGE}:${APP_TAG}
    restart: always
    ports:
      - 6000:5000
    env_file:
      - .env
    networks:
      - absensi
  
  app-prod-2:
    image: ${APP_IMAGE}:${APP_TAG}
    restart: always
    ports:
      - 6001:5000
    env_file:
      - .env
    networks:
      - absensi
  
  app-prod-3:
    image: ${APP_IMAGE}:${APP_TAG}
    restart: always
    ports:
      - 6002:5000
    env_file:
      - .env
    networks:
      - absensi
  
  app-staging-1:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5000:5000
    env_file:
      - .env
    networks:
      - absensi
  
  app-staging-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5001:5000
    env_file:
      - .env
    networks:
      - absensi

  app-staging-3:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5002:5000
    env_file:
      - .env
    networks:
      - absensi

  app-dev:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5002:5000
    env_file:
      - .env
    networks:
      - absensi

  database:
    container_name: database
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - absensi

networks:
  absensi:

volumes:
  pgdata: